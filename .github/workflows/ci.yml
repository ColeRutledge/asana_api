name: Build, Test, and Deploy

on: [push]

env:
  GH_REPO: colerutledge/asana_fastapi
  HEROKU_APP_NAME: asana-fastapi

jobs:
  ci:
    name: continuous integration
    runs-on: ubuntu-latest
    steps:
      - name: checkout master
        uses: actions/checkout@v2

      - name: docker buildx setup
        uses: docker/setup-buildx-action@v1
      - name: login to github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: docker layer caching setup
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-dev-cache
            /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: build
        uses: docker/build-push-action@v2
        with:
          file: ./docker/Dockerfile
          target: dev
          push: true
          tags: ghcr.io/${{ env.GH_REPO }}:dev
          cache-from: type=local,src=/tmp/.buildx-dev-cache
          cache-to: type=local,dest=/tmp/.buildx-dev-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: move cache
        run: |
          rm -rf /tmp/.buildx-dev-cache
          mv /tmp/.buildx-dev-cache-new /tmp/.buildx-dev-cache

      - name: pull & run dev
        run: |
          docker run \
          --name asana_fastapi \
          -p 8000:80 --rm -d \
          ghcr.io/${{ env.GH_REPO }}:dev

      - name: run tests
        run: docker exec asana_fastapi python -m pytest .

      - name: update badges
        run: |
          chmod +x .github/update_badges.py
          .github/update_badges.py
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          if [[ -z $(git status --porcelain) ]]
          then
              echo "tree is clean -> skipping"
          else
              git commit -m ':robot: badge update'
              git push
          fi

      - name: push to github container registry
        uses: docker/build-push-action@v2
        with:
          file: ./docker/Dockerfile
          target: prod
          push: true
          tags: ghcr.io/${{ env.GH_REPO }}:prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  cd:
    name: continuous delivery
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: checkout master
        uses: actions/checkout@v2

      - name: login to github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: pull image from container registry
        run: docker pull ghcr.io/${{ env.GH_REPO }}:prod

      - name: retag production image for deploy
        run: |
          docker image tag \
          ghcr.io/${{ env.GH_REPO }}:prod \
          registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:latest

      - name: login to heroku container registry
        run: docker login --username=_ --password=${HEROKU_AUTH_TOKEN} registry.heroku.com
        env:
          HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_API_KEY }}

      - name: push to heroku container registry
        run: docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:latest

      - name: release heroku container
        run: |
          chmod +x docker/release.py
          docker/release.py
        env:
          HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_API_KEY }}

  # - name: Run Container -- Dev/Test
  #   run: |
  #     docker run \
  #     --name asana_fastapi \
  #     --rm -d -p 8000:8001 \
  #     ghcr.io/colerutledge/asana_fastapi-stages:3

  # - name: Build Image -- Dev/Test
  #   run: |
  #     docker buildx build \
  #     --target dev \
  #     --cache-from ghcr.io/colerutledge/asana_fastapi \
  #     --file ./docker/Dockerfile \
  #     --tag ghcr.io/colerutledge/asana_fastapi_builder:latest \
  #     "."

  # - name: Run Tests and Stop Container
  #   run: docker exec asana_fastapi python -m pytest .

  # - name: Run Linting
  #   run: docker exec asana_fastapi python -m flake8 ./app

  # - name: Stop Container
  #   run: docker stop asana_fastapi

  # - name: Build Image -- Prod
  #   run: |
  #     docker build \
  #     --target prod \
  #     --cache-from ghcr.io/colerutledge/asana_fastapi:latest \
  #     --file ./docker/Dockerfile \
  #     --tag ghcr.io/colerutledge/asana_fastapi:latest \
  #     "."
