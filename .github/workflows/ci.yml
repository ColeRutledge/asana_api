name: Build, Test, and Deploy

on: [push]

jobs:
  # ci:
  #   name: continuous integration
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout master
  #       uses: actions/checkout@v2

  #     - name: set up docker buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: login to gitHub container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.CR_PAT }}

  #     - name: cache docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           /tmp/.buildx-dev-cache
  #           /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: ${{ runner.os }}-buildx-

  #     - name: build
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ./docker/Dockerfile
  #         target: dev
  #         push: true
  #         tags: ghcr.io/colerutledge/asana_fastapi:dev
  #         cache-from: type=local,src=/tmp/.buildx-dev-cache
  #         cache-to: type=local,dest=/tmp/.buildx-dev-cache-new

  #     # Temp fix
  #     # https://github.com/docker/build-push-action/issues/252
  #     # https://github.com/moby/buildkit/issues/1896
  #     - name: move cache
  #       run: |
  #         rm -rf /tmp/.buildx-dev-cache
  #         mv /tmp/.buildx-dev-cache-new /tmp/.buildx-dev-cache

  #     - name: check current images
  #       run: docker images

  #     - name: push to github container registry
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ./docker/Dockerfile
  #         target: prod
  #         push: true
  #         tags: ghcr.io/colerutledge/asana_fastapi:prod
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new

  #     - name: move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  cd:
    name: continuous delivery
    runs-on: ubuntu-latest
    # needs: ci
    steps:
      - name: checkout master
        uses: actions/checkout@v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: enable caching
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-dev-cache
            /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: login to gitHub container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: pull image from container registry
        run: docker pull ghcr.io/colerutledge/asana_fastapi:prod

      - name: retag production image for deploy
        run: |
          docker image tag \
          ghcr.io/colerutledge/asana_fastapi:prod \
          registry.heroku.com/asana-fastapi/web:latest

      # - name: build prod
      #   uses: docker/build-push-action@v2
      #   with:
      #     file: ./docker/Dockerfile
      #     target: prod
      #     tags: registry.heroku.com/asana-fastapi/web:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: check current images
        run: docker images

      - name: login to heroku container registry
        run: heroku container:login
        env:
          HEROKU_AUTH: ${{ secrets.HEROKU_API_KEY }}

      # - name: Push
      #   run: heroku container:push -a registry.heroku.com/asana-fastapi/web:latest web
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: push to heroku container registry
        run: docker push registry.heroku.com/asana-fastapi/web:latest

      - name: Release
        run: heroku container:release --app asana-fastapi web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      # - name: login to heroku container registry
      #   run: docker login --username=_ --password=${HEROKU_AUTH} registry.heroku.com
      #   env:
      #     HEROKU_AUTH: ${{ secrets.HEROKU_API_KEY }}

      # - name: push to heroku container registry
      #   run: docker push registry.heroku.com/asana-fastapi/web:latest

      # - name: release image
      #   run: heroku container:release web --app asana-fastapi

      # - name: run release.py
      #   run: |
      #     chmod +x docker/release.py
      #     docker/release.py
      #   env:
      #     HEROKU_AUTH: ${{ secrets.HEROKU_API_KEY }}
